5+6
age
age-height()
x <- (1, 3, 5, 7, 9)
x
x
data = C(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("~/")
setwd("~/")
setwd("~/")
My_age = 97
My_weight = 60
My_age = 97
My_weight = 60
My_height = 65
My_weight = 60
My_height = 65
My_age = 97
My_age = 97
My_weight = 60
My_height = 65
x = (My_height*My_age)/My_weight
print(x)
mean(students_height)
mean(students_height)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue"")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, size = cyl)) +
geom_point()
setwd("D:/Scientific works/NBICT/RDSML-B-8-NBICT/RDSML-Day-14 ğŸ‘‰ Histogram in R (Part-2)")
# Importing the dataset
dataset = data.csv("data.csv")
# Importing the dataset
dataset = read.csv("data.csv")
# Importing the dataset
dataset = read.csv("data.csv")
View(dataset)
# Importing the library
library(ggplot2)
# Basic histogram using ggplot2
ggplot(dataset, aes(x = weight)) +
geom_histogram()
# Basic histogram using ggplot2
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5)
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "identity")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "identity")
# Changing histogram plot line colors by groups
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "identity")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "stack")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge")
# Interleaved histograms
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
theme(legend.position = "top")
# The plyr package is used to calculate the mean weight of each group
install.packages("plyr")
# The plyr package is used to calculate the mean weight of each group
# install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean)
theme(legend.position = "top")
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean)
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean)
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean)
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean) +
theme(legend.position = "top")
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean) +
theme(legend.position = "top")
myPlot
myPlot
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, xintercept = grp.mean) +
theme(legend.position = "top")
myPlot
myPlot
theme(legend.position = "top")
myPlot
myPlot
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean) +
theme(legend.position = "top")
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 0.5, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean) +
theme(legend.position = "top")
myPlot
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
# Adding mean lines
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes(xintercept = grp.mean, color = sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "blue")) +
scale_fill_manual(values = c("green", "orange"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("red", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using custom color palettes
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
# Using color brewer color palettes
myPlot
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Paired") +
scale_fill_brewer(palette = "Paired")
# Using color brewer color palettes
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
# Using grey scale
myPlot + scale_color_grey() + scale_fill_grey()
# Using grey scale
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
