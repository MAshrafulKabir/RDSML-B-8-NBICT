5+6
age
age-height()
x <- (1, 3, 5, 7, 9)
x
x
data = C(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("~/")
setwd("~/")
setwd("~/")
My_age = 97
My_weight = 60
My_age = 97
My_weight = 60
My_height = 65
My_weight = 60
My_height = 65
My_age = 97
My_age = 97
My_weight = 60
My_height = 65
x = (My_height*My_age)/My_weight
print(x)
mean(students_height)
mean(students_height)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue"")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, size = cyl)) +
geom_point()
x = c(45, 50, 77, 51, 46)
summary(data)
setwd("D:/Scientific works/NBICT/RDSML-B-8-NBICT/RDSML-Day-38 ðŸ‘‰ One-way ANOVA in R (Part-2)")
stats <- PlantGrowth %>%
group_by(group) %>%
summarise(
mean = mean(weight),
sd = sd(weight),
se = sd(weight) / sqrt(n())
)
# One-way ANOVA
# Importing the dataset
PlantGrowth <- PlantGrowth
stats <- PlantGrowth %>%
group_by(group) %>%
summarise(
mean = mean(weight),
sd = sd(weight),
se = sd(weight) / sqrt(n())
)
print(stats)
# One-way ANOVA
# Importing the dataset
PlantGrowth <- PlantGrowth
# importing the dplyr library
# install.packages("dplyr")
library(dplyr)
stats <- PlantGrowth %>%
group_by(group) %>%
summarise(
mean = mean(weight),
sd = sd(weight),
se = sd(weight) / sqrt(n())
)
print(stats)
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants",
col = "lightgray"
boxplot(weight ~ group,
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants",
col = "lightgray"
boxplot(weight ~ group,
# Visualizing the data using mean plots
install.packages("ggpubr")
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants",
col = "lightgray"
)
ggline(PlantGrowth,
x = "group",
y = "weight",
add = c("mean_se", "jitter")
)
anova <- aov(weight ~ group, data = PlantGrowth)
summary(anova)
ggline(PlantGrowth,
x = "group",
y = "weight",
add = c("mean_se", "jitter")
)
anova <- aov(weight ~ group, data = PlantGrowth)
summary(anova)
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants",
col = "lightgray"
)
library(ggpubr)
ggline(PlantGrowth,
x = "group",
y = "weight",
add = c("mean_se", "jitter")
)
TukeyHSD(anova)
plot(anova, 1)
View(PlantGrowth)
library(car)
leveneTest(weight ~ group, data = PlantGrowth)
oneway.test(weight ~ group, data = PlantGrowth)
pairwise.t.test(PlantGrowth$weight, PlantGrowth$group,
p.adjust.method = "BH", pool.sd = FALSE)
plot(anova, 2)
aov_res <- residuals(object = anova)
aov_res
shapiro.test(aov_res)
kruskal.test(weight ~ group, data = PlantGrowth)
pairwise.wilcox.test(PlantGrowth$weight, PlantGrowth$group,
p.adjust.method = "BH")
