5+6
age
age-height()
x <- (1, 3, 5, 7, 9)
x
x
data = C(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("~/")
setwd("~/")
setwd("~/")
My_age = 97
My_weight = 60
My_age = 97
My_weight = 60
My_height = 65
My_weight = 60
My_height = 65
My_age = 97
My_age = 97
My_weight = 60
My_height = 65
x = (My_height*My_age)/My_weight
print(x)
mean(students_height)
mean(students_height)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue"")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, size = cyl)) +
geom_point()
setwd("D:/Scientific works/NBICT/RDSML-B-8-NBICT/Practice file")
# Mean
x = c(350, 355, 400, 356, 358, 355, 356, 340, 300, 310)
summary(x)
x = mean(data)
# Mean
data = c(350, 355, 400, 356, 358, 355, 356, 340, 300, 310)
x = mean(data)
x = mean(data)
summary(data)
print(x)
mean(data)
class(a)
is.numeric(a)
a = as.character(a)
a
class(a)
# Check the class of the pigeons
is.numeric(pigeons.name)
# Convert character to numeric
a = c(Fantail, Lahore, Mookee, Roller, Tumbler)
class(a)
is.character(a)
# Convert character to numeric
a = c("Fantail", "Roller", "Tumbler", "Mookee", "Lahore")
class(a)
# Convert character to numeric
is.numeric(a)
is.character(a)
# Convert numeric to character
a = c(1, 2, 3, 4, 5)
b = c("Fantail", "Roller", "Tumbler", "Mookee", "Lahore")
is.numeric(a)
is.character(b)
is.character(a)
a = c("Fantail", "Roller", "Tumbler", "Mookee", "Lahore")
b = c(1, 2, 3, 4, 5)
b = c(1, 2, 3, 4, 5)
as.numeric(a)
# Vectors in R
# Creating a vector using c() command
pigeon.height = c(5, 6, 7, 8. 9)
# Vectors in R
# Creating a vector using c() command
pigeon.height = c(5.5, 6.5, 7.1, 8.2, 9.9)
# Checking the class of the vector pigeon.height
is.numeric(pigeon.height)
is.logical(pigeon.height)
# R automatically converts numeric to text
# When you have a text item in the vector
b = c(5, 8, 2, "Fantail")
b
is.numeric(b)
is.character(b)
# From numeric to character
a = c(1, 2, 3, 4, 6)
class(a)
is.numeric(a)
is.character(a)
# Vectors can have character
names = c("fantail", "mookee", "lahore")
class(names)
names[2:4]
library(readxl)
Individuals_of_rock_pigeons <- read_excel("Individuals of rock-pigeons.xlsx")
View(Individuals_of_rock_pigeons)
# Generating a basic scatter plot
ggplot (individuals_of_rock_pigeons, aes(x = rock_pigeons, y = sites)) +
geom_point()
# Generating a basic scatter plot
ggplot (individuals_of_rock_pigeons, aes(x = rock_pigeons, y = sites)) +
geom_point()
# Generating a basic scatter plot
ggplot(individuals_of_rock_pigeons, aes(x = rock_pigeons, y = sites)) +
geom_point()
# Generating a basic scatter plot
ggplot2 (individuals_of_rock_pigeons, aes(x = rock_pigeons, y = sites)) +
geom_point()
library(ggplot2)
dataset = mtcars
ggplot (individuals_of_rock_pigeons, aes(x = rock_pigeons, y = sites)) +
geom_point()
# Generating a basic scatter plot
ggplot (individuals_of_rock_pigeons, aes(x = Rock_pigeons, y = Sites)) +
geom_point()
# Generating a basic scatter plot
ggplot (individuals_of_rock_pigeons, aes(x = Rock_pigeons, y = Sites)) +
geom_point(size =1, shape = 18)
# Generating a basic scatter plot
ggplot (individuals_of_rock_pigeons, aes(x = sites, y = rock_pigeons)) +
geom_point(size =1, shape = 18)
# Generating a basic scatter plot
ggplot (dataset, aes(x = sites, y = rock_pigeons)) +
geom_point(size =1, shape = 18)
View(dataset)
View(Individuals_of_rock_pigeons)
View(dataset)
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = sites, y = rock_pigeons)) +
geom_point(size =1, shape = 18)
View(dataset)
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point()
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `sites`, y = 'rock_pigeons')) +
geom_point()
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `sites`, y = 'rock-pigeons')) +
geom_point()
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `rock_pigeons`, y = 'sites')) +
geom_point()
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point(size 1, shape = 18)
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point(size = 1, shape = 18)
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point(size = 3, shape = 20)
# Generating a basic scatter plot
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point(size = 3, shape = 20) +
geom_smooth()
# Change the linetype and color
ggplot (Individuals_of_rock_pigeons, aes(x = `Rock-pigeons`, y = 'Sites')) +
geom_point(size = 3, shape = 20) +
geom_smooth(method = lm, linetype = "dashed", color = "red")
library(readxl)
Sex_weight <- read_excel("Sex_weight.xlsx")
View(Sex_weight)
# Basic histogram using ggplot2
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram()
# Basic histogram using ggplot2
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram(binwidth = 1, color = "black")
# Basic histogram using ggplot2
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram(binwidth = 3, color = "black")
# Basic histogram using ggplot2
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram(binwidth = 3, color = "black", fill = "lightblue")
myPlot + geom_vline(aes(xintercept = mean (weight)), color = "blue", linetype = "dashed", size =1)
# Adding the meanline
myPlot = ggplot (Sex_weight, aes(`Weight in gram`)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline(aes(xintercept = mean (weight)), color = "blue", linetype = "dashed", size =1)
# Adding the meanline
myPlot = ggplot (Sex_weight, aes(`Weight in gram`)) +
geom_histogram(color = "black", fill = "white")
myPlot = ggplot (Sex_weight, aes(`Weight in gram`)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline(aes(xintercept = mean (weight)), color = "blue", linetype = "dashed", size =1)
myPlot + geom_vline(aes(xintercept = mean (weighted.mean())), color = "blue", linetype = "dashed", size =1)
myPlot = ggplot (Sex_weight, aes(`Weight in gram`)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline(aes(xintercept = mean (weighted.mean())), color = "blue", linetype = "dashed", size =1)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `pigeons_sex`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(y = `pigeons_sex`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(y = `weight_in_gram`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `weight_in_gram`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `Weight in gram`, y = 'pigeons sex')) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = 'pigeons sex')) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = 'weight in gram')) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = weight in gram)) +
# Histogram with density plot
ggplot (Sex_weight, aes(x = weight in gram)) +
geom_density(fill = "black", alpha = .2)
# Histogram with density plot
ggplot (Sex_weight, aes(x = `Weight in gram`)) +
geom_histogram (aes(y = after_stat(density)), color = "black", fill = "lightblue") +
geom_density(fill = "blue", alpha = 0.2)
