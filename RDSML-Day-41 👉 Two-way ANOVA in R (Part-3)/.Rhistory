5+6
age
age-height()
x <- (1, 3, 5, 7, 9)
x
x
data = C(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("~/")
setwd("~/")
setwd("~/")
My_age = 97
My_weight = 60
My_age = 97
My_weight = 60
My_height = 65
My_weight = 60
My_height = 65
My_age = 97
My_age = 97
My_weight = 60
My_height = 65
x = (My_height*My_age)/My_weight
print(x)
mean(students_height)
mean(students_height)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue"")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, size = cyl)) +
geom_point()
x = c(45, 50, 77, 51, 46)
summary(data)
setwd("D:/Scientific works/NBICT/RDSML-B-8-NBICT/RDSML-Day-41 ðŸ‘‰ Two-way ANOVA in R (Part-3)")
# installing Packages
# install.packages(c("tidyverse", "car", "emmeans", "effectsize", "performance", "broom", "kableExtra"))
library(tidyverse)
# Importing the dataset
d <- read.csv("cropdata.csv")
# Quick Exploratory Descriptive Analysis
summs <- d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd(y)/sqrt(n()), .groups = "drop")
# Quick Data Summary Visualization
library(ggplot2)
ggplot(summs, aes(irr, mean, group = fert))+
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width = .2)+
facet_wrap(~fert, nrow = 1) +
labs(x="Irrigation", y="Mean yield",
title="Interaction of Fertilizer x Irrigation") +
theme_classic(base_size = 12)
# Fit the model
m <- aov(y ~ fert + irr + fert * irr, data = d)
summary(m)
# Assumptions visual checks
par(mfrow=c(2,2))
plot(m)
par(mfrow=c(1,1))
# Shapiro-Wilk on residuals (normality)
res <- residuals(m)
shapiro.test(res)
# Levene's test for equal variances
car::leveneTest(y ~ fert*irr, data = d, center = median)
# Interaction contrasts (simple effects):
# effect of fert at each level of irr
library(emmeans)
contrast(emmeans(m, ~ fert | irr), method = "pairwise", adjust = "tukey")
# Main-effect comparisons (only if interaction is negligible)
contrast(emmeans(m, ~fert), method = "tukey")
contrast(emmeans(m, ~irr), method = "tukey")
# CLD letters
library(multcomp)
# install.packages("multcompView")
library(multcompView)
group_letters <- cld(emmeans(m, ~ fert * irr), Letters = letters)
print(group_letters)
library(broom)
library(kableExtra)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
library(car)
aov_tab <- Anova(m, type = 3) %>%
tidy() %>%
mutate(p.value = signif(p.value, 3))
print(aov_tab)
kbl(aov_tab, digits = 3, caption = "Two-way ANOVA") %>%
kable_classic(full_width = FALSE, html_font = "Times New Roman")
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
install.packages(c(
"tidyverse","car","emmeans","effectsize","performance",
"broom","broom.helpers","kableExtra","multcomp","multcompView","patchwork"
))
library(tidyverse)
suppressPackageStartupMessages({
library(tidyverse); library(car); library(emmeans); library(effectsize)
library(performance); library(broom); library(broom.helpers)
library(kableExtra); library(multcomp); library(multcompView); library(patchwork)
})
d <- d %>%
mutate(
y    = as.numeric(y),
fert = factor(fert),
irr  = factor(irr)
) %>%
drop_na(y, fert, irr)
cat("\nCell counts (balance check):\n")
cat("\nCell counts (balance check):\n")
print(with(d, table(fert, irr)))
cat("\nGroup means (preview):\n")
print(d %>% group_by(fert, irr) %>% summarise(n=dplyr::n(), mean=mean(y), sd=sd(y), .groups="drop"))
summs <- d %>%
group_by(fert, irr) %>%
summarise(
n   = dplyr::n(),
mean= mean(y),
sd  = sd(y),
se  = sd/sqrt(n),
ci  = qt(.975, df=n-1)*se,  # 95% CI
.groups = "drop"
)
p_raw <- ggplot(d, aes(irr, y, color=fert)) +
geom_jitter(width=.08, height=0, alpha=.4) +
stat_summary(fun=mean, geom="point", position=position_dodge(width=.4), size=2.4) +
labs(title="Raw data with means", x="Irrigation", y="Yield")
p_ci <- ggplot(summs, aes(irr, mean, group=fert, color=fert)) +
geom_line(position=position_dodge(width=.3)) +
geom_point(size=2, position=position_dodge(width=.3)) +
geom_errorbar(aes(ymin=mean-ci, ymax=mean+ci),
width=.15, position=position_dodge(width=.3)) +
labs(title="Means Â± 95% CI by Fertilizer Ã— Irrigation", x="Irrigation", y="Mean yield")
(p_raw / p_ci) + plot_annotation(title = "Exploratory view")
