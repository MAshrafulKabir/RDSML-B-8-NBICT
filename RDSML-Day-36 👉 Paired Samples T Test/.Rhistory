5+6
age
age-height()
x <- (1, 3, 5, 7, 9)
x
x
data = C(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
data = c(9, 6, 17, 31, 11)
mean(data)
summary(data)
# Updating the file
data = c(9, 6, 17, 31, 11)
x = mean(data)
summary(data)
z = x/2
z
setwd("~/")
setwd("~/")
setwd("~/")
My_age = 97
My_weight = 60
My_age = 97
My_weight = 60
My_height = 65
My_weight = 60
My_height = 65
My_age = 97
My_age = 97
My_weight = 60
My_height = 65
x = (My_height*My_age)/My_weight
print(x)
mean(students_height)
mean(students_height)
students_height = c(50, 55, 64, 71, 45.25)
mean(students_height)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
# Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted", color = "darkblue")
# Change the line type and color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkblue")
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue"")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
# Changing the confidence interval color
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "blue") +
geom_smooth(method = lm, linetype = "dashed", color = "darkred", fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
# Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
# Changing point shapes and colors
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, color = cyl, size = cyl)) +
geom_point()
# Changing point shapes, colors and sizes
ggplot(dataset, aes(x = wt, y = mpg, size = cyl)) +
geom_point()
x = c(45, 50, 77, 51, 46)
summary(data)
setwd("D:/Scientific works/NBICT/RDSML-B-8-NBICT/RDSML-Day-36 ğŸ‘‰ Paired Samples T Test")
# Effect size calculation using Cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
# install.packages("effsize")
library(effsize)
# Paired Samples T-Test in R
# Importing the dataset
myDataset <- read.csv("paired-samples-t-test.csv")
# Effect size calculation using Cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
# install.packages("effsize")
library(effsize)
View(myDataset)
# Calculating the difference
diffs <- myDataset$carb - myDataset$carb_protein
# Checking if the differences are normally distributed
shapiro.test(diffs)
# Checking for outliers using boxplot
boxplot(diffs)
t.test(x = myDataset$carb,
y = myDataset$carb_protein,
paired = TRUE)
wilcox.test(x = myDataset$carb,
y = myDataset$carb_protein,
paired = TRUE)
mean(myDataset$carb)
sd(myDataset$carb)
mean(myDataset$carb_protein)
sd(myDataset$carb_protein)
# Effect size calculation using Cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
# install.packages("effsize")
library(effsize)
# Effect size calculation using Cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
# install.packages("effsize")
install.packages()
library(effsize)
library(effsize)
effsize
cohen.d(myDataset$carb_protein, myDataset$carb, paired = T)
cohen.d(myDataset$carb_protein, myDataset$carb, paired = T)
# Effect size calculation using Cohen's d
# 0.2 ~ small, 0.5 ~ medium, 0.8 ~ large
# install.packages("effsize")
install.packages()
library(effsize)
cohen.d(myDataset$carb_protein, myDataset$carb, paired = T)
